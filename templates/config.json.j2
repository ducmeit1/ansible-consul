{# This template will be passed through the 'to_nice_json' filter #}
{# The filter fixes whitespace, indentation and comma's on the last item #}
{
    {# Common Settings #}

    {## Node ##}
    {% if consul_node_name is defined %}
    "node_name": "{{ consul_node_name }}",
    {% endif %}
    "datacenter": "{{ consul_datacenter }}",
    "primary_datacenter": "{{ consul_primary_datacenter }}",
    "domain": "{{ consul_domain }}",
    "node_meta": {{ consul_node_meta | default({})| to_json }},
    {# Performance Settings #}
    "performance": {{ consul_performance | to_json }},
    {## Addresses ##}
    "client_addr": "{{ consul_client_address }}",
    "bind_addr": "{{ consul_bind_address }}",
    "advertise_addr": "{{ consul_advertise_address }}",

    {## Ports Used ##}
    "ports": {
        "dns": {{ consul_ports.dns }},
        "http": {{ consul_ports.http }},
        "https": {{ consul_ports.https }},
        "serf_lan": {{ consul_ports.serf_lan }},
        "serf_wan": {{ consul_ports.serf_wan }},
        "server": {{ consul_ports.server }},
        "grpc": {{ consul_ports.grpc }}
    },

    {## Raft protocol ##}
    "raft_protocol": {{ consul_raft_protocol }},

    {## DNS ##}
    {% if consul_recursors | length > 0 %}
        "recursors": {{ consul_recursors | to_json }},
    {% endif %}

    {## Agent ##}
    "data_dir": "{{ consul_data_path }}",
    "log_level": "{{ consul_log_level }}",
    "log_file": "{{ consul_log_path }}/{{ consul_log_file }}",
    "log_rotate_bytes": {{ consul_log_rotate_bytes }},
    "log_rotate_duration": "{{ consul_log_rotate_duration }}",
    "log_rotate_max_files": {{ consul_log_rotate_max_files }},
    "leave_on_terminate": {{ consul_leave_on_terminate | bool | to_json }},
    "skip_leave_on_interrupt": {{ consul_skip_leave_on_interrupt | bool | to_json }},
    "rejoin_after_leave": {{ consul_rejoin_after_leave | bool | to_json }},

    {## Limit HTTP Connections Per Client ##}
    "limits": {
        "http_max_conns_per_client": {{ consul_http_max_conns_per_client }}
    },

    {## Encryption and TLS ##}
    {% if consul_encrypt_enable | bool %}
    "encrypt": "{{ consul_gossip_encryption_key }}",
    {% endif %}

    {% if consul_tls_enable | bool %}
    "ca_file": "{{ consul_tls_dir }}/{{ consul_tls_ca_crt | basename }}",
    "cert_file": "{{ consul_tls_dir }}/{{ consul_tls_server_crt | basename }}",
    "key_file": "{{ consul_tls_dir }}/{{ consul_tls_server_key | basename }}",
    "verify_incoming": {{ consul_tls_verify_incoming | bool | to_json }},
    "verify_outgoing": {{ consul_tls_verify_outgoing | bool | to_json }},
    "verify_incoming_https": {{consul_tls_verify_incoming_https | bool| to_json }},
    "verify_server_hostname": {{ consul_tls_verify_server_hostname | bool | to_json }},
    {% endif %}

    {## LAN Join ##}
    "retry_interval": "{{ consul_retry_interval }}",
    "retry_max": {{ consul_retry_max | int }},

    "retry_join":
    {% if not consul_cloud_autodiscovery | bool %}
        {% if not consul_retry_join_skip_hosts %}
            {% for server in _consul_lan_servers %}
            {%   set _ = consul_join.append(hostvars[server]['consul_advertise_address'] | default(hostvars[server]['consul_bind_address']) | default(hostvars[server]['ansible_default_ipv4']['address']) | mandatory) %}
            {% endfor %}
        {% endif %}
    {{ consul_join | map('ipwrap') | list | to_json }},
    {% else %}
    ["{{ consul_cloud_autodiscovery_string }}"],
    {% endif %}

    {## Server ##}
    "server": true,

    {## Enable Connect on Server ##}
    {% if consul_connect_enabled | bool %}
    "connect": {
        "enable_mesh_gateway_wan_federation": {{ consul_mesh_gateway_wan_federation_enabled | bool | to_json }},
        "enabled": true
    },
    "primary_gateways": {{ consul_mesh_gateway_primary_gateways | to_json }},
    {% endif %}
    
    {## Bootstrap settings ##}
    "bootstrap_expect": {{ consul_bootstrap_expect_value }},

    {## AutoPilot ##}
    {% if consul_autopilot_enable | bool %}
    "autopilot": {
        "cleanup_dead_servers": {{ consul_autopilot_cleanup_dead_Servers | bool | to_json }},
        "last_contact_threshold": "{{ consul_autopilot_last_contact_threshold }}",
        "max_trailing_logs": {{ consul_autopilot_max_trailing_logs }},
        "server_stabilization_time": "{{ consul_autopilot_server_stabilization_time }}"{{ ',' if consul_enterprise else '' }}
        {% if consul_enterprise %}
        "redundancy_zone_tag":  "{{ consul_autopilot_redundancy_zone_tag }}",
        "disable_upgrade_migration": {{ consul_autopilot_disable_upgrade_migration | bool | to_json }},
        "upgrade_version_tag": "{{ consul_autopilot_upgrade_version_tag }}"
        {% endif %}
    },
    {% endif %}

    {## ACLs ##}
    {% if consul_acl_enable | bool %}
        "acl": {
            "enabled": true,
            "default_policy": "{{ consul_acl_default_policy }}",
            "enable_token_persistence": {{ consul_acl_token_persistence | bool | to_json }},
            "down_policy": "{{ consul_acl_down_policy }}",
            "token_ttl": "{{ consul_acl_ttl }}",
            "tokens": {
                {% if consul_acl_token | trim != '' %}
                "default": "{{ consul_acl_token }}",
                {% endif %}
                {% if consul_acl_agent_token | trim != '' %}
                "agent": "{{ consul_acl_agent_token }}",
                {% endif %}
                {% if consul_acl_agent_master_token | trim != '' %}
                "agent_master": "{{ consul_acl_agent_master_token }}",
                {% endif %}
                {% if consul_acl_master_token | trim != '' %}
                "master": "{{ consul_acl_master_token }}",
                {% endif %}
                {% if consul_acl_replication_token | trim != '' %}
                "replication": "{{ consul_acl_replication_token }}",
                {% endif %}
                }
            },
    {% endif %}

    {## UI ##}
    "ui": {{ consul_ui | bool | to_json }}
}