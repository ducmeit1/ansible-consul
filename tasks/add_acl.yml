# Add ACL Policy

- block:
    - name: Check ACL master token from previously boostrapped server
      command: "cat {{ consul_config_path }}/config.json"
      register: consul_acl_master_token_read
      run_once: true

    - name: Save acl_master_token from existing configuration
      set_fact:
        consul_acl_master_token: "{{ consul_acl_master_token_read.stdout | from_json | json_query(query) }}"
      vars:
        query: "acl.tokens.master"

  when:
    - bootstrap_state.stat.exists | bool
    - (consul_acl_master_token is not defined or consul_acl_master_token | trim == '')
  tags: acl-policy

- name: Write acl master token locally for use with new servers
  copy:
    content: "{{ consul_acl_master_token }}"
    dest: /tmp/consul_acl_master.token
  become: false
  vars:
    ansible_become: false
  when:
    - (consul_acl_master_token is defined and consul_acl_master_token | trim != '')
    - bootstrap_state.stat.exists | bool
  delegate_to: 127.0.0.1
  tags: acl-policy

- name: Read acl master token for servers that require it
  set_fact:
    consul_acl_master_token: "{{ lookup('file', '/tmp/consul_acl_master.token') }}"
  when:
    - (consul_acl_master_token is not defined or consul_acl_master_token | trim == '')
    - bootstrap_state.stat.exists | bool
  tags: acl-policy

- name: Delete acl master token file
  file:
    path: /tmp/consul_acl_master.token
    state: absent
  become: false
  vars:
    ansible_become: false
  when:
    - (consul_acl_master_token is defined and consul_acl_master_token | trim != '')
    - bootstrap_state.stat.exists | bool
  delegate_to: 127.0.0.1
  tags: acl-policy

- block:
    - name: Generate ACL master token
      command: "echo {{ lookup('password', '/dev/null length=32 chars=ascii_letters') | to_uuid }}"
      register: consul_acl_master_token_keygen
      run_once: true

    - name: Save ACL master token
      set_fact:
        consul_acl_master_token: "{{ consul_acl_master_token_keygen.stdout }}"

  when:
    - (consul_acl_master_token is not defined or consul_acl_master_token | trim == '')
    - not bootstrap_state.stat.exists | bool
  tags: acl-policy

- block:
    - name: Read ACL replication token from previously boostrapped server
      command: "cat {{ consul_config_path }}/config.json"
      register: consul_acl_replication_token_read
      run_once: true

    - name: Save acl_replication_token from existing configuration
      set_fact:
        consul_acl_replication_token: "{{ consul_acl_replication_token_read.stdout | from_json | json_query(query) }}"
      vars:
        query: "acl.tokens.replication"

  when:
    - (consul_acl_replication_token is not defined or consul_acl_replication_token | trim == '')
    - bootstrap_state.stat.exists | bool
  tags: acl-policy

- name: Write acl replication token locally for use with new servers
  copy:
    content: "{{ consul_acl_replication_token }}"
    dest: /tmp/consul_acl_replication.token
  become: false
  vars:
    ansible_become: false
  when:
    - (consul_acl_replication_token is defined and consul_acl_replication_token | trim != '')
    - bootstrap_state.stat.exists | bool
  delegate_to: 127.0.0.1
  tags: acl-policy

- name: Read acl replication token for servers that require it
  set_fact:
    consul_acl_replication_token: "{{ lookup('file', '/tmp/consul_acl_replication.token') }}"
  when:
    - (consul_acl_replication_token is not defined or consul_acl_replication_token | trim == '')
    - bootstrap_state.stat.exists | bool
  tags: acl-policy

- name: Delete acl master token file
  file:
    path: /tmp/consul_acl_replication.token
    state: absent
  become: false
  vars:
    ansible_become: false
  when:
    - (consul_acl_replication_token is defined and consul_acl_replication_token | trim != '')
    - bootstrap_state.stat.exists | bool
  delegate_to: 127.0.0.1
  tags: acl-policy

- block:
    - name: Generate ACL replication token
      command: "echo {{ lookup('password', '/dev/null length=32 chars=ascii_letters') | to_uuid }}"
      register: consul_acl_replication_token_keygen
      run_once: true

    - name: Save ACL replication token
      set_fact:
        consul_acl_replication_token: "{{ consul_acl_replication_token_keygen.stdout }}"

  when:
    - (consul_acl_replication_token is not defined or consul_acl_replication_token | trim == '')
    - not bootstrap_state.stat.exists | bool
  tags: acl-policy

- block:
    - name: Create acl folder
      file:
        state: directory
        path: "{{ consul_acl_path }}"
        owner: "{{ consul_user }}"
        group: "{{ consul_group }}"
        mode: 0744

    - name: Create ACL policy default configuration
      template:
        src: acl_policy.hcl.j2
        dest: "{{ consul_acl_path }}/acl_policy.hcl"
        owner: "{{ consul_user }}"
        group: "{{ consul_group }}"

  when:
    - consul_acl_policy | bool
  tags: acl-policy

- name: Display ACL Master Token
  debug:
    msg: "{{ consul_acl_master_token }}"
  when:
    - (consul_acl_master_token is defined and consul_acl_master_token | trim != '')
    - consul_acl_master_token_display | bool
  tags: acl-policy

- name: Display ACL Replication Token
  debug:
    msg: "{{ consul_acl_replication_token }}"
  when:
    - (consul_acl_replication_token is defined and consul_acl_replication_token | trim != '')
    - consul_acl_replication_token_display | bool
  tags: acl-policy