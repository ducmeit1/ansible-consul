- block:
    - block:
      - name: Check ACL master token from previously boostrapped server
        command: "cat {{ consul_config_path }}/config.json"
        register: consul_acl_master_token_read

      - name: Save acl_master_token from existing configuration
        set_fact:
          consul_acl_master_token: "{{ consul_acl_master_token_read.stdout | from_json | json_query(query) }}"
        vars:
          query: "acl.tokens.master"
        no_log: true

      run_once: true
      when:
        - bootstrap_state.stat.exists | bool
        - (consul_acl_master_token is not defined or consul_acl_master_token | length == 0)

    - block:
        - name: Generate ACL master token
          command: "echo {{ lookup('password', '/dev/null length=32 chars=ascii_letters') | to_uuid }}"
          register: consul_acl_master_token_keygen
          
        - name: Save ACL master token
          set_fact:
            consul_acl_master_token: "{{ consul_acl_master_token_keygen.stdout }}"
          no_log: true

      run_once: true
      when:
        - (consul_acl_master_token is not defined or consul_acl_master_token | length == 0)
        - not bootstrap_state.stat.exists | bool

    - block:
        - name: Read ACL replication token from previously boostrapped server
          command: "cat {{ consul_config_path }}/config.json"
          register: consul_acl_replication_token_read

        - name: Save acl_replication_token from existing configuration
          set_fact: 
            consul_acl_replication_token: "{{ consul_acl_replication_token_read.stdout | from_json | json_query(query) }}"
          no_log: true

      run_once: true
      when:
        - bootstrap_state.stat.exists | bool
        - (consul_acl_replication_token is not defined or consul_acl_replication_token | length == 0)

    - block:
        - name: Generate ACL replication token
          command: "echo {{ lookup('password', '/dev/null length=32 chars=ascii_letters') | to_uuid }}"
          register: consul_acl_replication_token_keygen

        - name: Save ACL replication token
          set_fact:
            consul_acl_replication_token: "{{ consul_acl_replication_token_keygen.stdout }}"    
          no_log: true
          
      run_once: true
      when:
        - (consul_acl_replication_token is not defined or consul_acl_replication_token | length == 0)
        - not bootstrap_state.stat.exists | bool

    - block:
        - name: Create acl folder
          file:
            state: directory
            path: "{{ consul_acl_path }}"
            owner: "{{ consul_user }}"
            group: "{{ consul_group }}"
            mode: 0744

        - name: Create ACL policy default configuration
          template:
            src: acl_policy.hcl.j2
            dest: "{{ consul_acl_path }}/acl_policy.hcl"
            owner: "{{ consul_user }}"
            group: "{{ consul_group }}"

      when: 
        - consul_acl_policy | bool
    
    - name: Display ACL Master Token
      debug:
        msg: "{{ consul_acl_master_token }}"
      run_once: true
      when:
        - consul_acl_master_token_display | bool
    
  when:
    - consul_acl_enable | bool
    - consul_node_role == 'server'
