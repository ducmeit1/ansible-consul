# Add ACL Policy

- block:
    - name: Check ACL master token from previously boostrapped server
      command: "cat {{ consul_config_path }}/config.json"
      register: consul_acl_master_token_read
      run_once: true

    - name: Save acl_master_token from existing configuration
      set_fact:
        consul_acl_master_token: "{{ consul_acl_master_token_read.stdout | from_json | json_query(query) }}"
      vars:
        query: "acl.tokens.master"

  when:
    - consul_acl_master_token is not defined or consul_acl_master_token | trim == ''
    - bootstrap_state.stat.exists
  tags: acl-policy

- block:
    - name: Generate ACL master token
      command: "echo {{ lookup('password', '/dev/null length=32 chars=ascii_letters') | to_uuid }}"
      register: consul_acl_master_token_keygen
      run_once: true

    - name: Save ACL master token
      set_fact:
        consul_acl_master_token: "{{ consul_acl_master_token_keygen.stdout }}"

  when:
    - consul_acl_master_token is not defined or consul_acl_master_token | trim == ''
    - not bootstrap_state.stat.exists
  tags: acl-policy

- block:
    - name: Read ACL replication token from previously boostrapped server
      command: "cat {{ consul_config_path }}/config.json"
      register: consul_acl_replication_token_read
      run_once: true

    - name: Save ACL replication token from existing configuration
      set_fact:
        consul_acl_replication_token: "{{ consul_acl_replication_token_read.stdout | from_json | json_query(query) }}"
      vars:
        query: "acl.tokens.replication"

  when:
    - consul_acl_replication_token is not defined or consul_acl_replication_token | trim == ''
    - bootstrap_state.stat.exists
  tags: acl-policy

- block:
    - name: Generate ACL replication token
      command: "echo {{ lookup('password', '/dev/null length=32 chars=ascii_letters') | to_uuid }}"
      register: consul_acl_replication_token_keygen
      run_once: true

    - name: Save ACL replication token
      set_fact:
        consul_acl_replication_token: "{{ consul_acl_replication_token_keygen.stdout }}"

  when:
    - consul_acl_replication_token is not defined or consul_acl_replication_token | trim == ''
    - not bootstrap_state.stat.exists
  tags: acl-policy

- name: Display ACL Master Token
  debug:
    msg: "{{ consul_acl_master_token }}"
  when:
    - consul_acl_master_token is defined and consul_acl_master_token | trim != ''
    - consul_acl_master_token_display | bool
  run_once: true
  tags: acl-policy

- name: Display ACL Replication Token
  debug:
    msg: "{{ consul_acl_replication_token }}"
  when:
    - consul_acl_replication_token is defined and consul_acl_replication_token | trim != ''
    - consul_acl_replication_token_display | bool
  run_once: true
  tags: acl-policy

- block:
    - name: Check ACL master token from previously boostrapped server
      command: "cat {{ consul_config_path }}/config.json"
      register: consul_acl_master_token_read
      run_once: true

    - name: Save ACL master token from existing configuration
      set_fact:
        consul_acl_master_token: "{{ consul_acl_master_token_read.stdout | from_json | json_query(query) }}"
      vars:
        query: "acl.tokens.master"

  when:
    - consul_acl_master_token is not defined or consul_acl_master_token | trim == ''
  tags: acl-policy

- block:
    - name: Generate ACL agent token
      command: "echo {{ lookup('password', '/dev/null length=32 chars=ascii_letters') | to_uuid }}"
      register: consul_acl_agent_token_keygen
      run_once: true

    - name: Save ACL agent token
      set_fact:
        consul_acl_agent_token: "{{ consul_acl_agent_token_keygen.stdout }}"

  when:
    - consul_acl_agent_token is not defined or consul_acl_agent_token | trim == ''
  tags: acl-policy

- block:
    - name: Read ACL agent token from previously boostrapped server
      command: "cat {{ consul_config_path }}/config.json"
      register: consul_acl_agent_token_read
      run_once: true

    - name: Save ACL agent token from existing configuration
      set_fact:
        consul_acl_agent_token: "{{ consul_acl_agent_token_read.stdout | from_json | json_query(query) }}"
      vars:
        query: "acl.tokens.agent"

  when:
    - consul_acl_agent_token is not defined or consul_acl_agent_token | trim == ''
  tags: acl-policy